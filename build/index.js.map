{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/edit.js","webpack:///./src/editor.scss","webpack:///./src/index.js","webpack:///./src/save.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]"],"names":["Edit","attributes","setAttributes","mbModalID","mbModalContentType","__","label","value","useBlockProps","registerBlockType","edit","save","props"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_modal_builder_block\"] = window[\"webpackJsonp_modal_builder_block\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import './editor.scss';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { InspectorControls } from '@wordpress/block-editor';\r\nimport { InnerBlocks, useBlockProps } from '@wordpress/block-editor';\r\nimport { PanelBody, TextControl, SelectControl } from '@wordpress/components';\r\n\r\nconst Edit = ({ attributes, setAttributes }) => {\r\n  const { mbModalID, mbModalContentType } = attributes;\r\n\r\n  return (\r\n    <>\r\n      <InspectorControls>\r\n        <PanelBody title={__('Modal Settings')}>\r\n          <SelectControl\r\n            label={__('Modal Content Type')}\r\n            help={__(\r\n              'Select what you will like to create. Modal Trigger, or Modal Content.'\r\n            )}\r\n            value={mbModalContentType}\r\n            options={[\r\n              {\r\n                label: 'Trigger',\r\n                value: 'htr-modal-trigger',\r\n              },\r\n              {\r\n                label: 'Content',\r\n                value: 'htr-modal-content',\r\n              },\r\n            ]}\r\n            onChange={(value) => {\r\n              setAttributes({ mbModalContentType: value });\r\n            }}\r\n          />\r\n          <TextControl\r\n            label={__('Content ID')}\r\n            help={__(\"Match this ID with your Modal's trigger/content.\")}\r\n            value={mbModalID}\r\n            onChange={(value) => {\r\n              setAttributes({ mbModalID: value });\r\n            }}\r\n          />\r\n        </PanelBody>\r\n      </InspectorControls>\r\n      <div {...useBlockProps()}>\r\n        <div\r\n          className={\r\n            mbModalContentType === 'htr-modal-content'\r\n              ? `${mbModalContentType}-edit`\r\n              : mbModalContentType\r\n          }\r\n        >\r\n          {mbModalContentType === 'htr-modal-trigger' ? (\r\n            <div className='modal-builder-header'>\r\n              <p>\r\n                <strong>Modal Trigger:</strong> Build your Modal{' '}\r\n                <strong>trigger</strong> below (most commonly, triggers are\r\n                buttons or images).\r\n                <br />\r\n                <small>Note: This text will not show on the front-end.</small>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className='modal-builder-header'>\r\n              <p>\r\n                <strong>Modal Content:</strong> Build your Modal{' '}\r\n                <strong>content</strong> below.\r\n                <br />\r\n                <small>\r\n                  Note: This text will not show on the front-end. The content\r\n                  below is also grayed out on the editor only. It will not be\r\n                  visible on the fron-tend until the trigger is clicked/tapped.\r\n                </small>\r\n                .\r\n              </p>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <InnerBlocks />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","// extracted by mini-css-extract-plugin\nexport {};","import { registerBlockType } from '@wordpress/blocks';\r\nimport './style.scss';\r\nimport Edit from './edit';\r\nimport save from './save';\r\n\r\nregisterBlockType('create-block/modal-builder-block', {\r\n  edit: Edit,\r\n  save,\r\n});\r\n","import { __ } from '@wordpress/i18n';\r\nimport { InnerBlocks, useBlockProps } from '@wordpress/block-editor';\r\n\r\nconst save = (props) => {\r\n  const { mbModalID, mbModalContentType } = props.attributes;\r\n\r\n  // Learnings. Save.js/Save function can not have usestate or other interactivity. It is only to give HTMl.\r\n  // -- Note: The save function should be a pure function that depends only on the attributes used to invoke it. (https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/)\r\n  // You cannot use two inner blocks in edit or save. You are only allowed one.\r\n  // -- Note: A block can render at most a single InnerBlocks and InnerBlocks.Content element in edit and save respectively. To create distinct arrangements of nested blocks, create a separate block type which renders its own InnerBlocks and assign as the sole allowedBlocks type. (https://github.com/WordPress/gutenberg/tree/trunk/packages/block-editor/src/components/inner-blocks)\r\n\r\n  return (\r\n    <div {...useBlockProps.save()}>\r\n      {mbModalContentType == 'htr-modal-trigger' ? (\r\n        <div className='htr-modal-trigger' data-modal-id={mbModalID}>\r\n          <InnerBlocks.Content />\r\n        </div>\r\n      ) : (\r\n        <dialog\r\n          className='htr-modal-content htr-modal-content-hide'\r\n          data-modal-id={mbModalID}\r\n        >\r\n          <div className='htr-modal-content-background'></div>\r\n          <div className='htr-modal-content-close-btn'>X</div>\r\n          <div className='htr-modal-content-wrap'>\r\n            <InnerBlocks.Content />\r\n          </div>\r\n        </dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default save;\r\n","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}